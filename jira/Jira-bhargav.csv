Summary,Description
Change  MasterSolutionRepositoryBuilder to MasterSolutionsRepositoryBuilder and CustomSolutionRepositoryBuilder to CustomSolutionsRepositoryBuilder,the current change in the PR to be avoided [https://bitbucket.org/deliverysolutions/nr-executor/pull-requests/179/diff|https://bitbucket.org/deliverysolutions/nr-executor/pull-requests/179/diff|smart-link] 
Update Onboarding Scrpt with the new configuration URL,
Updating existing Lynks schema,"As per support given to display Lynks schema in node-red canvas (DL-60070)

Need to update all existing data for the same.

Refer Card solution for detail or reach out to [~accountid:5f589d0840e048006e0cc94a]/[~accountid:5f4ddee0333edb00432ffff9]"
Cross track task for PR review of lynks-service,As a part of [https://delivery-solutions.atlassian.net/browse/DL-60817|https://delivery-solutions.atlassian.net/browse/DL-60817|smart-link]  we are doing changes in lynks-service. This is cross track task for review.
Script for deleting OrderTenantMapping linked with the Invasix Tenant,"For the Production Invasix Go on Prod the linking with the order tenant mapping needs to be removed with the already created trackers 

3 migration scripts need to be created:

# find count for deletion
# deleltion script
# verification script

the structure of the orderTenantMapping is as follows:

{noformat}{
  ""_id"": {
    ""$oid"": ""6684ba842186ddeb67b17abb""
  },
  ""orderId"": {
    ""$oid"": ""6684ba84823048ee3fef734d""
  },
  ""workflow"": ""carrier"",
  ""businessExternalId"": null,
  ""provider"": ""FedEx"",
  ""storeExternalId"": ""BHARGAV_ROADIE_INSURANCE_007"",
  ""tenantId"": ""bhargav_mantha"",
  ""trackingNumber"": ""794644835174""
}{noformat}

take a backup of the data that is being deleted

Psuedocode:

# findAll and count the number of documents with tenantId: {{invasic}}
#  since the document size can be really huge use the right  approach and write  the files to a <tenant>.json file
# delete the documents with tenantId: “<tenant name>“
# compare the count in 1 and deleted count"
Code review for DL-59040 from DM,"Dev: [https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/308/overview|https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/308/overview|smart-link] 
QA: [https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/316/diff|https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/316/diff|smart-link] "
Cross track PR review for lynks-service,"As part of this card [https://delivery-solutions.atlassian.net/browse/DL-59679|https://delivery-solutions.atlassian.net/browse/DL-59679|smart-link]  we have removed tenantId, username and permissions from request body."
Code review for DL-16333,"[~accountid:62b18dcddcafd965c5ddbeb6] to attach the PR
[https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/194/diff|https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/194/diff]"
PR Review for Migration (DL-57409),
PR Review for lynks-service,Lynks Service: [https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/141/diff#chg-src/workflows-builder/workflows-builder.controller.ts|https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/141/diff#chg-src/workflows-builder/workflows-builder.controller.ts|smart-link] 
Code review of lynks-service from DM for DL-5737,"DEV PR: [https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/120|https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/120|smart-link] 
Updated DEV PR(Including review comments Fix): [https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/142/|https://bitbucket.org/deliverysolutions/lynks-service/pull-requests/142/|smart-link] "
UT update for lynks-service,Add Unit tests to lynks Service
send the CSV format file for location export,"UPS needs to have the location that are going to be added in the LynkUP tenantrecieved from HubBox as CSV the script for the same:

[^test.js]  "
Migrations for the Newly Created Routes in the API Gate way to be added in the APiGateWay collection,"the routes 

{noformat}[ {
    ""weight"": 0,
    ""viewAccess"": true,
    ""editAccess"": false,
    ""deleteAccess"": false,
    ""method"": ""POST"",
    ""api"": ""/lynks/v1/install"",
    ""type"": ""onload"",
    ""action"": ""View"",
    ""pages"": []
  },
  {
    ""weight"": 0,
    ""viewAccess"": true,
    ""editAccess"": false,
    ""deleteAccess"": false,
    ""method"": ""POST"",
    ""api"": ""/lynks/v1/enable"",
    ""type"": ""onload"",
    ""action"": ""View"",
    ""pages"": []
  },
  {
    ""weight"": 0,
    ""viewAccess"": true,
    ""editAccess"": false,
    ""deleteAccess"": false,
    ""method"": ""POST"",
    ""api"": ""/lynks/v1/disable"",
    ""type"": ""onload"",
    ""action"": ""View"",
    ""pages"": []
  },
  {
    ""weight"": 0,
    ""viewAccess"": true,
    ""editAccess"": false,
    ""deleteAccess"": false,
    ""method"": ""POST"",
    ""api"": ""/lynks/v1/uninstall"",
    ""type"": ""onload"",
    ""action"": ""View"",
    ""pages"": []
  }
]{noformat}

Please refer 

{noformat}migrations/sprint-113/DL-53994/add-new-routes{noformat}"
PR Review : lynks-mfe,"We are doing cleanup activity for duplicate routes and moving few apigateways routes to correct path  , please refer Tech solution: [https://delivery-solutions.atlassian.net/browse/DL-3969|https://delivery-solutions.atlassian.net/browse/DL-3969|smart-link]

 

*Route update strategy for QA written in this subtask :*
[https://delivery-solutions.atlassian.net/browse/DL-55502|https://delivery-solutions.atlassian.net/browse/DL-55502|smart-link]

|lynks-mfe|[https://bitbucket.org/deliverysolutions/lynks-mfe/pull-requests/92|https://bitbucket.org/deliverysolutions/lynks-mfe/pull-requests/92|smart-link]|"
"Migration for APS config, onboarding service ","The current APS works stand alone with APS this needs to be migrated to Lynk up compatible {{lynks-service}} apis. The following card [https://delivery-solutions.atlassian.net/browse/DL-7925|https://delivery-solutions.atlassian.net/browse/DL-7925|smart-link]  will move alerts/ notifications to messaging-db. This will move the aps-configure ocde to use the {{MESSAGING_INTERNAL_URL=http://common-qa.deliverysolutions-internal.co:1104}} .



the code for this is already done on QA and the same is working as expected.

{noformat}{
  ""headers"": {
      ""isTestTenant"": false,
      ""tenantId"": ""{{headers.tenantid}}"",
      ""userid"": ""623d759e52424a9e1545c719"",
      ""x-correlation-id"": ""no_correlation_id"",
      ""Content-Type"": ""application/json""
  },
  ""body"": {
        ""statuses"": [
            {
                ""type"": ""shipping"",
                ""statuses"": [
                    ""ORDER_DELIVERED""
                ]
            }
        ],
        ""recordType"": [
            ""dispatched"",
            ""tracked""
        ],
        ""sendAfter"": 0,
        ""targets"": [
            {
                ""to"": """",
                ""medium"": ""webhook"",
                ""liveTracking"": false,
                ""interval"": """",
                ""enableInformationUpdates"": false,
                ""orderLevel"": false,
                ""headers"": {
                    ""tenantId"": ""{{headers.tenantid}}""
                },
                ""authConfig"": {
                    ""type"": ""none"",
                    ""grantType"": ""client_credentials"",
                    ""authorizationType"": ""header""
                },
                ""url"": ""http://onboarding-qa.deliverysolutions-internal.co/onboarding/ups-channel/create-aps-order""
            }
        ],
        ""active"": true,
        ""tenantId"": ""{{headers.tenantid}}"",
        ""tags"": [""system"",""proximity""],
        ""isDeleted"": false,
        ""type"": ""tenant-webhook""
  }
}{noformat}

{noformat}{
	""jobName"": ""aps-configure"",
	""validation"": {
		""config"": {
			""path"": ""https://{{BUCKET_URL}}/onboarding/solutions/{{JOB_NAME}}/{{JOB_VERSION}}/schema/aps-configure-validation-schema.json""
		}
	},
	""transformer"": {
		""request"": null,
		""response"": {
			""statusCode"": 200,
			""type"": ""passthrough"",
			""context"": {
				""createApsResp"": ""aps-configure""
			},
			""mapperDoc"": ""https://{{BUCKET_URL}}/onboarding/solutions/{{JOB_NAME}}/{{JOB_VERSION}}/transformer/response/aps-configure.response.hbs""
		}
	},
	""executionFlow"": {
		""tasks"": [
			{
				""taskName"": ""set-tenant-aps-config"",
				""type"": ""call-ds-api"",
				""config"": {
					""method"": ""POST"",
					""headers"": [
						""tenantId"",
						""x-api-key""
					],
					""context"": {},
					""endpoint"": ""{{API_URL}}/api/v2/config/setByModule/aps?target=tenant"",
					""requestFormation"": {
						""mapperDoc"": ""https://{{BUCKET_URL}}/onboarding/solutions/{{JOB_NAME}}/{{JOB_VERSION}}/templates/request/set-tenant-aps-config.request.hbs""
					},
					""responseFormation"": null
				},
				""sequence"": ""start""
			},
			{
				""taskName"": ""get-corporate"",
				""type"": ""call-ds-api"",
				""config"": {
					""method"": ""GET"",
					""headers"": [
						""tenantId""
					],
					""endpoint"": ""{{API_INTERNAL_URL}}/api/v2/corporate"",
					""requestFormation"": {
						""mapperDoc"": ""https://{{BUCKET_URL}}/onboarding/solutions/{{JOB_NAME}}/{{JOB_VERSION}}/templates/request/get-corporate.request.hbs""
					},
					""responseFormation"": {
						""mapperDoc"": ""https://{{BUCKET_URL}}/onboarding/solutions/{{JOB_NAME}}/{{JOB_VERSION}}/templates/response/get-corporate.response.hbs""
					}
				},
				""sequence"": ""withPrevious""
			},
			{
				""taskName"": ""check-if-field-not-exists"",
				""type"": ""custom-function"",
				""context"": {},
				""config"": {
					""path"": ""check-if-field-not-exists"",
					""requestFormation"": null,
					""responseFormation"": null,
					""skipErrors"": [
						{
							""statusCode"": -1,
							""type"": ""ALL""
						}
					],
					""metadata"": {
						""keyPath"": ""isTestTenant"",
						""fromTask"": ""get-corporateDsps""
					}
				},
				""sequence"": ""afterPrevious""
			},
			{
				""taskName"": ""create-tracker-for-tenant"",
				""type"": ""call-ds-api"",
				""abortIf"": [
					""create-aps-order-test-tenant""
				],
				""config"": {
					""method"": ""POST"",
					""headers"": [
						""tenantId"",
						""x-api-key"",
						""x-correlation-id"",
						""isTestTenant"",
						""userid"",
						""Content-Type""
					],
					""endpoint"": ""{{MESSAGING_INTERNAL_URL}}/api/notification/v1/webhooks/tenant-webhook"",
					""requestFormation"": {
						""mapperDoc"": ""https://{{BUCKET_URL}}/onboarding/solutions/{{JOB_NAME}}/{{JOB_VERSION}}/templates/request/aps-configure-tracker.request.hbs""
					},
					""responseFormation"": null
				},
				""sequence"": ""afterPrevious""
			},
			{
				""taskName"": ""create-tracker-for-test-tenant"",
				""type"": ""call-ds-api"",
				""abortIf"": [
					""create-tracker-for-tenant""
				],
				""config"": {
					""method"": ""POST"",
					""headers"": [
						""tenantId"",
						""x-api-key"",
						""x-correlation-id"",
						""isTestTenant"",
						""userid"",
						""Content-Type""
					],
					""endpoint"": ""{{MESSAGING_INTERNAL_URL}}/api/notification/v1/webhooks/tenant-webhook"",
					""requestFormation"": {
						""mapperDoc"": ""https://{{BUCKET_URL}}/onboarding/solutions/{{JOB_NAME}}/{{JOB_VERSION}}/templates/request/aps-configure-tracker-test.request.hbs""
					},
					""responseFormation"": null
				},
				""sequence"": ""afterPrevious""
			}
		]
	},
	""rollbackFlow"": {
		""tasks"": []
	}
}{noformat}"
Backend Changes and Configurations for Invasix (APS) Prod Account,"+*This is an escalation from L2 team to L3*+

As discussed, this ticket is to track the required backend changes and configurations for the newly created Production account for Invasix (APS). The following tasks need to be completed:

* Resolve a *3-day delay* issue.
* Set up *Webhook onboarding service*.
* Configure *S3 bucket settings*.


*Acceptance Criteria:*

* Backend changes are completed and verified.
* Webhook onboarding service is fully functional.
* S3 bucket configurations are successfully applied."
Required Changes For Sandbox Based On Changes For Invasix,"Required Changes:

# Filter Logic 
{noformat}{
  ""body"": {
    ""packageDetails.shipperNumber"": [""0000515YV8""],
    ""packageDetails.currentAddress.addressLine1"": [{
      ""anything-but"": [""17 HUGHES""]
    }],
    ""packageDetails.currentAddress.address.countryCode"": [""US""]
  }
}{noformat}
# Changes in in ups-create-request
## {noformat}""dropoffTime"": null,
        {{#if body.packageDetails.plannedSDD}}
            ""dropoffTime"": {
                ""endsAt"" : {{ convertDateToEpoch body.packageDetails.plannedSDD }}
            },
        {{/if}}
        {{#if (eq body.packageDetails.plannedSDD ""1900-01-01"")}}
            ""dropoffTime"": null,
        {{/if}}{noformat}
## OrderAttributes based Changes 
{noformat}""orderAttributes"" : {
            ""shipperNumber"" : ""{{ body.packageDetails.shipperNumber }}"",
            {{#each body.packageDetails.refNumDtl}}
                {{#if (eq this.refNumType ""1"")}}
                    {{#if (eq this.refNumSeq ""01"")}}
                        ""shptRef1"": ""{{this.refNum}}""
                        {{#unless @last}},{{/unless}}
                    {{/if}}
                    {{#if (eq this.refNumSeq ""02"")}}
                        ""shptRef2"": ""{{this.refNum}}""
                        {{#unless @last}},{{/unless}}
                    {{/if}}
                {{/if}}
                {{#if (eq this.refNumType ""2"")}}
                    {{#if (eq this.refNumSeq ""03"")}}
                        ""pkgRef1"": ""{{this.refNum}}""
                        {{#unless @last}},{{/unless}}
                    {{/if}}
                    {{#if (eq this.refNumSeq ""04"")}}
                        ""pkgRef2"": ""{{this.refNum}}""
                        {{#unless @last}},{{/unless}}
                    {{/if}}
                    {{#if (eq this.refNumSeq ""05"")}}
                        ""pkgRef3"": ""{{this.refNum}}""
                        {{#unless @last}},{{/unless}}
                    {{/if}}
                    {{#if (eq this.refNumSeq ""06"")}}
                        ""pkgRef4"": ""{{this.refNum}}""
                        {{#unless @last}},{{/unless}}
                    {{/if}}
                    {{#if (eq this.refNumSeq ""07"")}}
                        ""pkgRef5"": ""{{this.refNum}}""
                        {{#unless @last}},{{/unless}}
                    {{/if}}
                {{/if}}
            {{/each}}
            ,
            ""outboundTracker"" : ""{{body.shu.pkgTckNr}}""
        }{noformat}
# change in {{create-aps-order}}
## 
{noformat}""orderAttributes"": {{{DSStringify body.orderAttributes}}}{noformat}
## changes in exisitng body of the create-aps-order
# In the *_corporate_* collection in *_lma-master_* for the *_tenant_* invasix please configure
## *isUniqueExtId:* true
## *orderTransformation* with the following value in the database
## *_request:_*
{noformat}if (order.returnRequest &&
  order.orderAttributes &&
  order.orderAttributes.pkgRef1 &&
  order.orderAttributes.pkgRef2 &&
  order.orderAttributes.outboundTracker) {
  if (order.orderAttributes.pkgRef2 === ""None"") {
    order.orderAttributes.pkgRef2 = ""Return"";
  }
  order.orderAttributes[""upsRefNumber""] = [
    { Value: order.orderAttributes.pkgRef1 },
    { Value: order.orderAttributes.pkgRef2 },
    {
      Value: order.orderAttributes.outboundTracker.substr(
        order.orderAttributes.outboundTracker.length - 10
      ),
    },
  ];
}{noformat}
## *_response_*:””
# Orchestration related changes 
## !https://lh7-rt.googleusercontent.com/docsz/AD_4nXeS-atPe4SQEiWKA1-wHrqmxG3NrNJHorK_DJKVYHAXVMLcI_N--JPTW0raLNoVv7VQwXOrkWgwKUFCwbFzaa1ZoJsqiCxn1BRliDoWaY7gdZr82TJjVI3MPxmVA6jxwE8IUluPTQ?key=FvOVeEZcak3YNDRD0-ivOsJ5|width=1600,height=681!
!https://lh7-rt.googleusercontent.com/docsz/AD_4nXd-eD3rNv2Tu3Aw1kPwYOdsV3QK0wYFpJKHVaKNgPOMz-fiFRC5GG_oNZuvtgqxQtNDz38I6WfFxh6JPERoc66IBRp56Lezqwo80l4MfnIru-V2dUa403xS2ffb9FtUWtuTwG10Ew?key=FvOVeEZcak3YNDRD0-ivOsJ5|width=1600,height=1047!
## !https://lh7-rt.googleusercontent.com/docsz/AD_4nXez-W2Mj-tCxeM6MARs_xJ6IV7hLvemGG6Sbu4mmHgT4Qk5E1PMvAKS6Oc6BMTZQeysem4w7vDYktLMsLM0kN-vR-zuKhnh4PL2ECBNpuj9BxSp4QLqpRhN-rGZtPzrIAl5LpRFAw?key=FvOVeEZcak3YNDRD0-ivOsJ5|width=1600,height=1047!
!https://lh7-rt.googleusercontent.com/docsz/AD_4nXc5zgYfOP_TRRiZkdsGhC2r4OeLOC0s3WyngS8TBwwhpJj0oQ6dtgIO-enAaOYMkqOKYdEZ3OvR1QkaiP4bwljoMDMAIWKK9bnk05XxjAtvSCR5QlpN3VoSc74tIYsZ-NTUUHbMsw?key=FvOVeEZcak3YNDRD0-ivOsJ5|width=1600,height=240!"
Code Review - to add new merchant on Test Account,[https://bitbucket.org/deliverysolutions/onboarding-service/pull-requests/308|https://bitbucket.org/deliverysolutions/onboarding-service/pull-requests/308]
Test Case For Check If Not Exist Task,"{noformat}import { Test, TestingModule } from '@nestjs/testing';
import { RequestContext } from '../../../core-engine/orchestrator/dto/request-context.dto';
import { CheckIfFieldNotExists } from './check-if-field-exists.service';
import { TaskStatus } from '../../../../constants/task.constants';

describe('CheckIfFieldNotExists', () => {
  let service: CheckIfFieldNotExists;
  let reqContext: jest.Mocked<RequestContext>;
  const mockGetOutputForTask = jest.fn();
  const mockGetBody = jest.fn();

  beforeEach(async () => {
    reqContext = {
      getOutputForTask: mockGetOutputForTask,
      getBody: mockGetBody,
    } as any;
    const module: TestingModule = await Test.createTestingModule({
      providers: [CheckIfFieldNotExists],
    }).compile();

    service = module.get<CheckIfFieldNotExists>(CheckIfFieldNotExists);
    reqContext.getBody = jest.fn().mockReturnValue(new Map());
  });

  it('should be defined', () => {
    expect(service).toBeDefined();
  });

  it('should return success when field does not exist', () => {
    // Arrange
    const params = {
      metadata: {
        fromTask: 'previousTask',
        keyPath: '$.some.non.existent.path',
      },
    };

    mockGetOutputForTask.mockReturnValue({
      response: {
        some: {
          different: 'data',
        },
      },
    });

    // Act
    const result = service.run(params, reqContext);

    // Assert
    expect(result).toEqual({
      status: TaskStatus.SUCCESS,
      response: 'test eligible',
    });
    expect(mockGetOutputForTask).toHaveBeenCalledWith('previousTask');
  });

  it('should throw error when field exists', () => {
    // Arrange
    const params = {
      metadata: {
        fromTask: 'previousTask',
        keyPath: '$.some.existing.field',
      },
    };

    mockGetOutputForTask.mockReturnValue({
      response: {
        some: {
          existing: {
            field: 'value',
          },
        },
      },
    });

    // Act & Assert
    expect(() => service.run(params, reqContext)).toThrow('Not test eligible');
    expect(mockGetOutputForTask).toHaveBeenCalledWith('previousTask');
  });

  it('should handle null response from previous task', () => {
    // Arrange
    const params = {
      metadata: {
        fromTask: 'previousTask',
        keyPath: '$.some.path',
      },
    };

    mockGetOutputForTask.mockReturnValue(null);

    // Act
    const result = service.run(params, reqContext);

    // Assert
    expect(result).toEqual({
      status: TaskStatus.SUCCESS,
      response: 'test eligible',
    });
    expect(mockGetOutputForTask).toHaveBeenCalledWith('previousTask');
  });

  it('should handle undefined response from previous task', () => {
    // Arrange
    const params = {
      metadata: {
        fromTask: 'previousTask',
        keyPath: '$.some.path',
      },
    };

    mockGetOutputForTask.mockReturnValue(undefined);

    // Act
    const result = service.run(params, reqContext);

    // Assert
    expect(result).toEqual({
      status: TaskStatus.SUCCESS,
      response: 'test eligible',
    });
    expect(mockGetOutputForTask).toHaveBeenCalledWith('previousTask');
  });

  afterEach(() => {
    jest.clearAllMocks();
  });
});
{noformat}"
Implement Order update for UPS,"Need to implement order subscriptions for orders which are generated via Tracker.

Integration team using {{enableWebhookUpdate}} key as a signature in the function to enable the UPS webhook update.
 If {{enableWebhookUpdate}} is true, Integration will subscribe to the UPS webhook. 
If it is false, Integration will not subscribe."
Code Review for DL-30347,Code Review for DL-30347
Code Review for Naruto Service to Place Delivery and Pickup Order,
Test Cases For The So Far Written Code,The code so far written needs to have 100% test coverage.
Code Review of DL-44046 [DM],Code Review of [https://delivery-solutions.atlassian.net/browse/DL-44046|https://delivery-solutions.atlassian.net/browse/DL-44046]
Code Review of DL-38262,Code Review of [https://delivery-solutions.atlassian.net/browse/DL-38262|https://delivery-solutions.atlassian.net/browse/DL-38262|smart-link] 
Code Review of DL-43409,Code Review of [https://delivery-solutions.atlassian.net/browse/DL-43409|https://delivery-solutions.atlassian.net/browse/DL-43409|smart-link] 
Claims: CRUD Operations,
Replace With Store Boundary Id EntityId Should Accept Number,"[https://bitbucket.org/deliverysolutions/store-boundaries-node/pull-requests/903/diff#Lapp.jsT2063|https://bitbucket.org/deliverysolutions/store-boundaries-node/pull-requests/903/diff#Lapp.jsT2063|smart-link] 

in Cron-service the entity id is currently only Mongo id it should Accept number as well"
Make the fields inside Carrier mandatory.,"[CarrierWorkflowInfoEntity|https://bitbucket.org/deliverysolutions/repository/src/ed575743cf4af79124f49f773f56dd8b8dfbfa3e/src/repository/tenant-db/order/miscellaneous-entites.ts#miscellaneous-entites.ts-30] - This entity has many fields which are optional, which won’t be the case - with insurance [https://delivery-solutions.atlassian.net/browse/DL-23108|https://delivery-solutions.atlassian.net/browse/DL-23108|smart-link] we now have all the fields that are passed in carrier as mandatory.

*Modify the below*

{noformat}CarrierWorkflowInfoEntity {
  @IsString()
  @IsOptional()
  @Expose()
  provider?: string;

  @IsString()
  @IsOptional()
  @Expose()
  trackingNumber?: string;

  @IsNumber()
  @IsOptional()
  @Expose()
  amount?: number;

  @IsString()
  @IsOptional()
  @Expose()
  serviceId?: string;

  @IsString()
  @IsOptional()
  @Expose()
  serviceName?: string;

  @IsString()
  @IsOptional()
  @Expose()
  status?: string;

  @ValidateNested()
  @Expose()
  providerInfo: ProviderInfo;
}{noformat}

 *to*



{noformat}CarrierWorkflowInfoEntity {
  @IsString()
  @Expose()
  provider: string;

  @IsString()
  @Expose()
  trackingNumber: string;

  @IsNumber()
  @IsOptional()
  @Expose()
  amount?: number; // amount can be null for non-estimate 

  @IsString()
  @Expose()
  serviceId: string;

  @IsString()
  @Expose()
  serviceName: string;

  @IsString()
  @Expose()
  status: string;

  @ValidateNested()
  @Expose()
  providerInfo: ProviderInfo;
}{noformat}"
Code review getSingletonRoutes for Nest.Js in correlator library,
Monitor the DLQ Configured for Order Webhooks & Analyze Errors,
Profiling of Order Service,Compare Order service with API and gather information on the usage statics so far.
Review Labels V3 PR,[https://bitbucket.org/deliverysolutions/label-service/pull-requests/229|https://bitbucket.org/deliverysolutions/label-service/pull-requests/229|smart-link] 
JavaScript Algorithms and Data Structures Masterclass,[https://www.udemy.com/course/js-algorithms-and-data-structures-masterclass|https://www.udemy.com/course/js-algorithms-and-data-structures-masterclass]
 Mastering Data Structures & Algorithms using C and C++,[https://www.udemy.com/course/datastructurescncpp|https://www.udemy.com/course/datastructurescncpp|smart-link] 
Certified Kubernetes Administrator (CKA) with Practice Tests L & D Activity,[https://www.udemy.com/course/certified-kubernetes-administrator-with-practice-tests|https://www.udemy.com/course/certified-kubernetes-administrator-with-practice-tests|smart-link] 
Handle deprecation of stagingArea in the new Order Service,Handle deprecation of stagingArea in the new Order Service
L&D: Store Boundaries,"[~accountid:622f15be442e0e0069ebe1d7] [~accountid:5fe04e4fdd5eb5010834ccdc] 

Delivery Team to take this up for upcoming Isoline card in Sprint 100."
Update The Tree Structure To Accommodate The Rules In Hierarchical Fashion,"The current architecture does not work or accommodate the skipping of the child rules in case the parent rule is not eligible. 



The architecture is supposed to skip the children in case the parent is not eligible 

!image-20240125-051141.png|width=100%!

[https://visualgo.net/en/dfsbfs|https://visualgo.net/en/dfsbfs|smart-link] 

order of traversal should be 1-> 15 in order and the skipping of 1 should skip rest of the childrent in 1 and continue to 13, 14, and 15



 "
"Quote, Purchase Insurance, Get Claim & Create Claim Implementation Documentation","[https://delivery-solutions.atlassian.net/wiki/spaces/standards/pages/783646772/Get+a+Quote+for+Insurance+-+Rates|https://delivery-solutions.atlassian.net/wiki/spaces/standards/pages/783646772/Get+a+Quote+for+Insurance+-+Rates|smart-link] 
[https://delivery-solutions.atlassian.net/wiki/spaces/standards/pages/795607046/Purchase+Insurance+Get+Claim+Create+Claim+Implementation|https://delivery-solutions.atlassian.net/wiki/spaces/standards/pages/795607046/Purchase+Insurance+Get+Claim+Create+Claim+Implementation|smart-link] 

*reference*: [https://delivery-solutions.atlassian.net/wiki/spaces/standards/pages/774701297/Risk+Score+Implementation|https://delivery-solutions.atlassian.net/wiki/spaces/standards/pages/774701297/Risk+Score+Implementation|smart-link] "
<DL-23555> PR review from Delivery Management Team,
Unit Testing Implementation Approach Documentation,
QA SQS to be down for testing,
Documentation for Approach of Order Service,
Unit testing OrdersBySubBatchId,
Benchmarking for unit test coverage for all Micro Services,Benchmarking for unit test coverage for all Micro Services
Complete unit testing framework-Consumer(Recieve Message),
move aws version v2 -> v3 ,
ECS set up for place-order-async-sqs-consumer,"In order to test the service for this repository: [https://bitbucket.org/deliverysolutions/place-order-async-sqs-consumer/src/master/|https://bitbucket.org/deliverysolutions/place-order-async-sqs-consumer/src/master/|smart-link] 
on an ECS cluster. Could u let me know by when this is feasible

# This is going to be needed to scale based on the memory with a threshold of 70 % over scale-up and scale down 
# Required for getting the Performance Statistics for the 400-X test "
create a library for the lambda function/ code to work on ec2 for processing the orders,
Order Flow - Understanding and Flow Diagram,"*Requirement*: 

# Have complete understanding of all the functions used in api/v2/order/placeorder → create a diagram to make it clear for anyone who sees it for the first time and make it in a way that its easier to follow.
# Create a new place order flow video to update in training.

Existing Diagram created during workflow discussion with [~accountid:5f96548ac824730070ff11c2] [~accountid:5fbb476f7cc1030069505fe0] 

[https://viewer.diagrams.net/?page-id=504Q-iKVyPue9k12rAz2&highlight=0000ff&edit=_blank&layers=1&nav=1&page-id=504Q-iKVyPue9k12rAz2#G1kL07ce2W_gec9saaeoniVd5S2nz0jMyX|https://viewer.diagrams.net/?page-id=504Q-iKVyPue9k12rAz2&highlight=0000ff&edit=_blank&layers=1&nav=1&page-id=504Q-iKVyPue9k12rAz2#G1kL07ce2W_gec9saaeoniVd5S2nz0jMyX]

Class Diagram:

[https://drive.google.com/file/d/1ANtnw-32xqROE8nt5uHLb1sPxX2r-WLz/view?usp=sharing|https://drive.google.com/file/d/1ANtnw-32xqROE8nt5uHLb1sPxX2r-WLz/view?usp=sharing|smart-link]"
RCA by dispatch team,
"Cleanup of code, and following right designs for Workflow","Source: [~accountid:5de9d451be6c1f0d0720c76c] 

To send data to the Integration layer, the design of the files was changed in a way to meet the requirements within the timeline. This requires separate file to ensure the data layer is separated"
Cassandra Database PoC and implementation of best practices,"# Cassandra basics
# Cassandra best practices
# Single Tenant strategy & creating new tenant keyspaces / tables
# Cluster and Partition key selection best practices & their usage
# Connection best practices
# Security guidelines
# VPC Peering and secure data transfer connection
# Replication strategy
# Write majority equivalent in Cassandra
# DR Setup, EU GDPR and connection
# Time-based querying for metering, rules outcome etc events
# Exploring Datastax Astra
# Serverless implementation vs dedicated servers
# Performance of serverless & dedicated
# GUI for querying locally
# ORM
# Cost
# Support
# Extra features like triggers, changestreams, realtime etc



All these points should be covered in a confluence doc with options . A PoC of the principles that we end up choosing from the options in the doc has to be done"
Create dbconnection service and repository layer for cassandra,
